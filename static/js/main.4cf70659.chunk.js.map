{"version":3,"sources":["pages/HomePage/HomePage.tsx","custom-hooks/useFetch.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage/PeoplePage.tsx","constants/apiUrl.tsx","pages/NotFoundPage/NotFoundPage.tsx","components/Navbar/Navbar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","useFetch","url","useState","people","setPeople","isLoading","setIsLoading","errorMessage","setErrorMessage","useEffect","delay","Promise","resolve","setTimeout","then","fetch","response","json","catch","Loader","PersonLink","person","slug","name","sex","to","cn","PeopleTable","personSlug","useParams","map","born","died","motherName","fatherName","mother","father","PeoplePage","getPerent","parentName","find","peopleWithPerents","length","NotFoundPage","Navbar","text","isActive","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.4cf70659.chunk.js","sourcesContent":["import { FC } from 'react';\n\nexport const HomePage: FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Person } from '../types/Person';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function useFetch(url: string) {\n  const [people, setPeople] = useState<Person[]>();\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [errorMessage, setErrorMessage] = useState<string>('');\n\n  useEffect(() => {\n    if (!url) {\n      return;\n    }\n\n    wait(500)\n      .then(() => fetch(url))\n      .then(response => response.json())\n      .then(setPeople)\n      .then(() => setIsLoading(false))\n      .catch(() => setErrorMessage('Something went wrong'));\n  }, [url]);\n\n  return {\n    isLoading,\n    people,\n    errorMessage,\n  };\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  const { slug, name, sex } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={cn({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  const { personSlug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person: Person) => {\n          const {\n            sex,\n            born,\n            died,\n            motherName,\n            fatherName,\n            mother,\n            father,\n            slug,\n          } = person;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              className={cn({ 'has-background-warning': personSlug === slug })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {mother ? (\n                  <PersonLink person={mother} />\n                ) : (\n                  motherName || '-'\n                )}\n              </td>\n\n              <td>\n                {father ? (\n                  <PersonLink person={father} />\n                ) : (\n                  fatherName || '-'\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { FC } from 'react';\nimport { useFetch } from '../../custom-hooks/useFetch';\nimport { Loader } from '../../components/Loader';\nimport { PeopleTable } from '../../components/PeopleTable';\nimport { API_URL } from '../../constants/apiUrl';\n\nexport const PeoplePage: FC = () => {\n  const { people, isLoading, errorMessage } = useFetch(API_URL);\n\n  const getPerent = (parentName: string | null) => {\n    if (parentName) {\n      return people?.find(person => person.name === parentName);\n    }\n\n    return null;\n  };\n\n  const peopleWithPerents = people ? people.map((person) => {\n    return {\n      ...person,\n      mother: getPerent(person.motherName),\n      father: getPerent(person.fatherName),\n    };\n  }) : [];\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (<Loader />)}\n\n          {errorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {errorMessage}\n            </p>\n          )}\n\n          {people?.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people && (<PeopleTable people={peopleWithPerents} />)}\n        </div>\n      </div>\n    </>\n  );\n};\n","// eslint-disable-next-line max-len\nexport const API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n","import { FC } from 'react';\n\nexport const NotFoundPage: FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\ninterface Props {\n  to: string;\n  text: string;\n}\n\nexport const Navbar: FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => cn(\n        'navbar-item', { 'has-background-grey-lighter': isActive },\n      )}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","// eslint-disable-next-line object-curly-newline\nimport { Navigate, Route, Routes } from 'react-router-dom';\n\nimport './App.scss';\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { PeoplePage } from './pages/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage/NotFoundPage';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <Navbar to=\"/\" text=\"Home\" />\n          <Navbar to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personSlug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}